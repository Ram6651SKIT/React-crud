{"version":3,"sources":["components/AddUserForm.js","components/UserTable.js","components/ModalExample.js","components/EditUserForm.js","App.js","serviceWorker.js","index.js"],"names":["AddUserForm","props","initialFormState","id","firstname","lastname","age","gender","dateofjoining","_useState","useState","_useState2","Object","slicedToArray","user","setUser","handleInputChange","event","_event$target","target","name","value","objectSpread","defineProperty","react_default","a","createElement","Form","onSubmit","preventDefault","addUser","FormGroup","Label","for","Input","type","required","placeholder","onChange","Button","color","UserTable","React","Component","Table","bordered","users","length","map","key","onClick","deleteUser","editRow","style","margin","colSpan","EditUserForm","currentUser","useEffect","updateUser","setEditing","App","setUsers","_useState3","_useState4","editing","_useState5","_useState6","setCurrentUser","className","components_EditUserForm","updatedUser","components_AddUserForm","concat","toConsumableArray","components_UserTable","filter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f455f011.chunk.js","sourcesContent":["import React, {useState}from 'react'\r\nimport {  Button, Form, FormGroup, Label, Input,CustomInput  } from 'reactstrap';\r\n\r\n\r\n// import DayPickerInput from 'react-day-picker/DayPickerInput';\r\n// import 'react-day-picker/lib/style.css';\r\n// import MomentLocaleUtils, {\r\n//   formatDate,\r\n//   parseDate,\r\n// } from 'react-day-picker/moment';\r\n\r\n// import 'moment/locale/it';\r\n\r\n\r\n\r\nconst AddUserForm = props => {\r\n    const initialFormState ={id:null,firstname:'',lastname:'',age:'',gender:'',dateofjoining:''}\r\n    const [user,setUser]=useState(initialFormState)\r\n\r\nconst handleInputChange = event => {\r\n    const { name, value } = event.target\r\n  \r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  \r\n  \r\n    \r\n  return (\r\n      <Form onSubmit={event => {\r\n        event.preventDefault()\r\n        if (!user.firstname || !user.lastname) return\r\n    \r\n        props.addUser(user)\r\n        setUser(initialFormState)\r\n      }}>\r\n          <FormGroup>\r\n              <Label for=\"firstname\">First Name</Label>\r\n              <Input type=\"text\" required name=\"firstname\" placeholder=\"Enter First Name\"  value={user.firstname} onChange={handleInputChange}/ >\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastname\">Last Name</Label>\r\n              <Input type=\"text\"  required name=\"lastname\" placeholder=\"Enter Last Name\" value={user.lastname}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"age\">Age</Label>\r\n              <Input type=\"text\"  required name=\"age\" placeholder=\"Enter Age\" value={user.age}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"gender\">Gender</Label>\r\n              <Input type=\"text\"  required name=\"gender\" placeholder=\"Gender\" value={user.gender}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"dateofjoining\">Date of joining</Label>\r\n              {/* <DayPickerInput\r\n        formatDate={formatDate}\r\n        parseDate={parseDate}\r\n        placeholder={`${formatDate(new Date())}`}\r\n        value={user.dateofjoining}  onChange={handleInputChange}\r\n      /> */}\r\n              <Input type=\"date\"  required name=\"dateofjoining\"  value={user.dateofjoining}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n          \r\n           \r\n\r\n            <Button color=\"success\">Add User</Button>\r\n      </Form>\r\n   \r\n  )\r\n}\r\n\r\nexport default AddUserForm;\r\n","import React from 'react'\r\nimport {Table} from 'reactstrap';\r\nimport {Button} from 'reactstrap';\r\nimport ModalExample from './ModalExample';\r\n\r\n\r\n const UserTable= props =>  (\r\n   <Table bordered>\r\n       <thead>\r\n           <tr>\r\n               <th>Action</th>\r\n               <th>First Name</th>\r\n               <th>Last Name</th>\r\n               <th>Age</th>\r\n               <th>Gender</th>\r\n               <th>Date of Joining</th>\r\n               \r\n           </tr>\r\n       </thead>\r\n       <tbody>\r\n           {props.users.length > 0 ? (\r\n               props.users.map(user =>(\r\n                <tr key={user.id}>\r\n                <td>\r\n                    <Button color=\"danger\"  onClick={() => props.deleteUser(user.id)} >Delete</Button>\r\n                    <Button color=\"primary\"    onClick={() => {props.editRow(user)}} \r\n                             style={{margin:10}}>Edit</Button>\r\n                    </td>\r\n                    <td>{user.firstname}</td>\r\n                    <td>{user.lastname}</td>\r\n                    <td>{user.age}</td>\r\n                    <td>{user.gender}</td>\r\n                    <td>{user.dateofjoining}</td>\r\n                \r\n            </tr>\r\n               ))\r\n           ):(\r\n             <tr>\r\n                 <td colSpan={6}>No users</td>\r\n             </tr>  \r\n           )\r\n         }\r\n          \r\n       </tbody>\r\n       {/* <ModalExample/> */}\r\n   </Table>\r\n   \r\n  )\r\n\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader,  ModalFooter } from 'reactstrap';\r\nimport AddUserForm from './AddUserForm';\r\n\r\nclass ModalExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button className=\"addnewuserbtn\" color=\"primary\" onClick={this.toggle}>Add new User {this.props.buttonLabel}</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle} charCode=\"X\">Create New User</ModalHeader>\r\n          <AddUserForm/>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggle}>Add</Button>\r\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalExample;","\r\nimport React, { useState, useEffect } from 'react'\r\nimport {  Button, Form, FormGroup, Label, Input,  } from 'reactstrap';\r\n\r\nconst EditUserForm = props => {\r\n\tconst [ user, setUser ] = useState(props.currentUser)\r\n\r\n\tconst handleInputChange = event => {\r\n\t\tconst { name, value } = event.target\r\n\r\n\t\tsetUser({ ...user, [name]: value })\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n          setUser(props.currentUser)\r\n        },\r\n        [ props ]\r\n      )\r\n      \r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={event => {\r\n\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\tprops.updateUser(user.id, user)\r\n\t\t\t}}\r\n\t\t>\r\n        <FormGroup>\r\n              <Label for=\"firstname\">First Name</Label>\r\n              <Input type=\"text\" name=\"firstname\"  value={user.firstname} onChange={handleInputChange}/ >\r\n            </FormGroup>\r\n\t\t\r\n\r\n            <FormGroup>\r\n              <Label for=\"lastname\">Last Name</Label>\r\n              <Input type=\"text\" name=\"lastname\"  value={user.lastname}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"age\">Age</Label>\r\n              <Input type=\"text\"  required name=\"age\"  value={user.age}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"gender\">Gender</Label>\r\n              <Input type=\"text\"  required name=\"gender\"  value={user.gender}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"dateofjoining\">Date of joining</Label>\r\n              <Input  required name=\"dateofjoining\"  value={user.dateofjoining}  onChange={handleInputChange}/>\r\n            </FormGroup>\r\n\r\n\t\t\t<Button color=\"primary\">Update </Button>\r\n\t\t\t<Button onClick={() => props.setEditing(false)} color=\"danger\" style={{margin:10}}>\r\n\t\t\t\tCancel\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default EditUserForm;","import React, { useState } from 'react';\nimport UserTable from './components/UserTable';\nimport EditUserForm from './components/EditUserForm';\nimport AddUserForm from './components/AddUserForm';\n\nconst App =() =>{\n  const userData=[\n    {id:1,firstname:\"Ram\",lastname:\"Yaragarla\",age:\"23\",gender:\"male\",dateofjoining:\"04-12-2018\"},\n    {id:2,firstname:\"Sandy\",lastname:\"SK\",age:\"23\",gender:\"male\",dateofjoining:\"04-12-2018\"},\n    {id:3,firstname:\"Naga\",lastname:\"naidu\",age:\"43\",gender:\"male\",dateofjoining:\"04-12-2018\"},\n  ]\n  const [users,setUsers]=useState(userData)\n\n  const addUser=user=>{\n    user.id=users.length+1;\n    setUsers([...users,user])\n  }\n\n  const deleteUser = id => {\n    setEditing(false)\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  const [ editing, setEditing ] = useState(false)\n  const initialFormState = { id: null, firstname: '', lastname: '' ,age:'',gender:'',dateofjoining:''}\n  const [ currentUser, setCurrentUser ] = useState(initialFormState)\n\n  const editRow = user => {\n    setEditing(true)\n  \n    setCurrentUser({ id: user.id, \n                     firstname: user.firstname, \n                     lastname: user.lastname ,\n                     age:user.age,\n                     gender:user.gender,\n                     dateofjoining:user.dateofjoining})\n                      }\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false)\n\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)))\n  }\n\n  return(\n    <div className=\"container\">\n    <h4 className=\"h4\">React CRUD Application </h4>\n    <div className=\"row\">\n    <div className=\"col-md-3\">\n    <div className=\"flex-large\">\n  {editing ? (\n    <div>\n      <h4 className=\"edituser\">Edit User</h4>\n      <EditUserForm\n        editing={editing}\n        setEditing={setEditing}\n        currentUser={currentUser}\n        updateUser={updateUser}\n      />\n    </div>\n  ) : (\n    <div>\n      <h4 className=\"adduser\">Add User</h4>\n      <AddUserForm addUser={addUser} />\n    </div>\n  )}\n</div>\n    </div>\n    <div className=\"col-md-9\">\n    <UserTable users={users} editRow={editRow} deleteUser={deleteUser}/>\n    </div>\n    </div>\n    \n    </div>\n  )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}